#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  cursor: default;
  user-select: none;
}

::-webkit-scrollbar {
  width: 20px;
}

::-webkit-scrollbar-track {
  box-shadow: inset 0 0 1px 1px transparent;
  border: solid 0px transparent;
}

::-webkit-scrollbar-thumb {
  box-shadow: inset 0 0 6px 6px #676767;
  border: solid 5px transparent;
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

.glowing-underline {
  position: relative;
}

span.glowing-underline:after,
a.glowing-underline:after,
button.glowing-underline:after {
  content: "";
  position: absolute;
  bottom: -6px;
  left: 0;
  height: 5px;
  width: 100%;
  background-color: #4de39c;
  border-radius: 10px;
}

a.glowing-underline:after {
  bottom: -10px;
  height: 3px;
}

button.glowing-underline:after {
  height: 3px;
}

.divider {
  background-color: #676767;
  height: 1px;
  border: 0;
}

.project-card {
  background-color: #242424;
  padding: 18px 32px;
  border-radius: 16px;
}

.contact-form input,
.contact-form textarea {
  border-bottom: 1px solid #676767;
  background-color: transparent;
  outline: none;
  padding: 12px 20px;
  color: #fff;
  font-size: 16px;
}

.contact-form input:focus,
.contact-form textarea:focus {
  border-bottom: 1px solid #fefefe;
  outline: none;
}

.headline {
  font-size: clamp(
    2rem,
    0.3043rem + 3.4783vw,
    3.875rem
  ); /* max - 62px & min - 32px*/
}

.tagline {
  width: 50%;
}

@media (max-width: 1024px) {
  .tagline {
    width: 75%;
  }
}

/* ----------------- */
.loader {
  position: relative;
  width: 30px;
  height: 30px;
  border-radius: 10px;
}

.loader div {
  width: 8%;
  height: 24%;
  background: rgb(128, 128, 128);
  position: absolute;
  left: 50%;
  top: 30%;
  opacity: 0;
  border-radius: 50px;
  box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
  animation: fade458 1s linear infinite;
}

@keyframes fade458 {
  from {
    opacity: 1;
  }

  to {
    opacity: 0.25;
  }
}

.loader .bar1 {
  transform: rotate(0deg) translate(0, -130%);
  animation-delay: 0s;
}

.loader .bar2 {
  transform: rotate(30deg) translate(0, -130%);
  animation-delay: -1.1s;
}

.loader .bar3 {
  transform: rotate(60deg) translate(0, -130%);
  animation-delay: -1s;
}

.loader .bar4 {
  transform: rotate(90deg) translate(0, -130%);
  animation-delay: -0.9s;
}

.loader .bar5 {
  transform: rotate(120deg) translate(0, -130%);
  animation-delay: -0.8s;
}

.loader .bar6 {
  transform: rotate(150deg) translate(0, -130%);
  animation-delay: -0.7s;
}

.loader .bar7 {
  transform: rotate(180deg) translate(0, -130%);
  animation-delay: -0.6s;
}

.loader .bar8 {
  transform: rotate(210deg) translate(0, -130%);
  animation-delay: -0.5s;
}

.loader .bar9 {
  transform: rotate(240deg) translate(0, -130%);
  animation-delay: -0.4s;
}

.loader .bar10 {
  transform: rotate(270deg) translate(0, -130%);
  animation-delay: -0.3s;
}

.loader .bar11 {
  transform: rotate(300deg) translate(0, -130%);
  animation-delay: -0.2s;
}

.loader .bar12 {
  transform: rotate(330deg) translate(0, -130%);
  animation-delay: -0.1s;
}

/* --------------- */

.wrapper {
  width: 100%;
  margin-top: 4rem;
  margin-bottom: 8rem;
  position: relative;
  height: 110px;
  overflow: hidden;
  mask-image: linear-gradient(
    to right,
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 1) 20%,
    rgba(0, 0, 0, 1) 80%,
    rgba(0, 0, 0, 0)
  );
}

@keyframes scrollLeft {
  to {
    left: -200px;
  }
}

.item {
  width: 250px;
  height: 110px;
  padding: 16px 0px;
  text-align: center;
  background-color: #242424;
  border-radius: 6px;
  position: absolute;
  left: max(calc(250px * 10), 100%);
  animation-name: scrollLeft;
  animation-duration: 30s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

.item1 {
  animation-delay: calc(30s / 10 * (10 - 1) * -1);
}

.item2 {
  animation-delay: calc(30s / 10 * (10 - 2) * -1);
}

.item3 {
  animation-delay: calc(30s / 10 * (10 - 3) * -1);
}

.item4 {
  animation-delay: calc(30s / 10 * (10 - 4) * -1);
}

.item5 {
  animation-delay: calc(30s / 10 * (10 - 5) * -1);
}

.item6 {
  animation-delay: calc(30s / 10 * (10 - 6) * -1);
}

.item7 {
  animation-delay: calc(30s / 10 * (10 - 7) * -1);
}

.item8 {
  animation-delay: calc(30s / 10 * (10 - 8) * -1);
}

.item9 {
  animation-delay: calc(30s / 10 * (10 - 9) * -1);
}

.item10 {
  animation-delay: calc(30s / 10 * (10 - 10) * -1);
}
